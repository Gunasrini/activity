{"version":3,"file":"static/js/9492.0f4a4cfb.chunk.js","mappings":"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","sources":["views/app-views/admin-users/AdminUsers.js","../node_modules/@ant-design/icons-svg/es/asn/LockOutlined.js","../node_modules/@ant-design/icons/es/icons/LockOutlined.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Button, Modal, Form, Input, Select, Popconfirm, message, Checkbox } from 'antd';\r\nimport { LockOutlined } from '@ant-design/icons';\r\nimport './AdminUsers.css';\r\n\r\nconst { Option } = Select;\r\n\r\nconst AdminUsers = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n  const [userData, setUserData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [roles, setRoles] = useState([]);\r\n  const [form] = Form.useForm();\r\n  const [isAdministrator, setIsAdministrator] = useState(false);\r\n  const [isPasswordModalOpen, setIsPasswordModalOpen] = useState(false);\r\n  const [passwordForm] = Form.useForm();\r\n  const [permissions, setPermissions] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    fetchRoles();\r\n    loadPermissions();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isEditing && editingUser) {\r\n      form.setFieldsValue({\r\n        firstName: editingUser.firstName,\r\n        lastName: editingUser.lastName,\r\n        email: editingUser.email,\r\n        role: editingUser.roleName,\r\n        isAdministrator: editingUser.au_is_administrator,\r\n      });\r\n      setIsAdministrator(editingUser.au_is_administrator === 1);\r\n    } else {\r\n      form.resetFields();\r\n      setIsAdministrator(false);\r\n    }\r\n  }, [isEditing, editingUser, form]);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      const filtered = userData.filter(\r\n        (user) =>\r\n          user.firstName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n          user.lastName.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n          user.email.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n      setFilteredData(filtered);\r\n    } else {\r\n      setFilteredData(userData);\r\n    }\r\n  }, [searchQuery, userData]);\r\n\r\n  const loadPermissions = () => {\r\n    const storedPermissions = JSON.parse(localStorage.getItem('permissions'));\r\n    setPermissions(storedPermissions || []);\r\n  };\r\n\r\n  const hasPermission = (menuId, action) => {\r\n    if (!permissions || permissions.length === 0) {\r\n      return true; // Super admin has all permissions\r\n    }\r\n    const permission = permissions.find((perm) => perm.menu_id === menuId);\r\n    return permission ? permission[action] === 1 : false;\r\n  };\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await axios.get('http://159.89.167.135:3000/api/admin/getUsers');\r\n      setUserData(response.data.data);\r\n      setFilteredData(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      message.error('Failed to fetch users');\r\n    }\r\n  };\r\n\r\n  const fetchRoles = async () => {\r\n    try {\r\n      const response = await axios.get('http://159.89.167.135:3000/api/admin/getRole');\r\n      setRoles(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching roles:', error);\r\n      message.error('Failed to fetch roles');\r\n    }\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n    setIsEditing(false);\r\n    setEditingUser(null);\r\n    form.resetFields();\r\n  };\r\n\r\n  const handleAddUser = async (values) => {\r\n    try {\r\n      await axios.post('http://159.89.167.135:3000/api/admin/createUser', { ...values, au_is_administrator: isAdministrator ? 1 : 0 });\r\n      message.success('User added successfully');\r\n      fetchUsers();\r\n      toggleModal();\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.message) {\r\n        message.error(error.response.data.message);\r\n      } else {\r\n        message.error('An unexpected error occurred');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditUser = (record) => {\r\n    setIsEditing(true);\r\n    setEditingUser(record);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleUpdateUser = async (values) => {\r\n    try {\r\n      await axios.put(`http://159.89.167.135:3000/api/admin/updateUser/${editingUser.id}`, { ...values, au_is_administrator: isAdministrator ? 1 : 0 });\r\n      message.success('User updated successfully');\r\n      fetchUsers();\r\n      toggleModal();\r\n    } catch (error) {\r\n      console.error('Error updating user:', error);\r\n      message.error('Failed to update user');\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (id) => {\r\n    try {\r\n      await axios.delete(`http://159.89.167.135:3000/api/admin/deleteUser/${id}`);\r\n      message.success('User deleted successfully');\r\n      fetchUsers();\r\n    } catch (error) {\r\n      console.error('Error deleting user:', error);\r\n      message.error('Failed to delete user');\r\n    }\r\n  };\r\n\r\n  const handleChangePassword = (record) => {\r\n    setEditingUser(record);\r\n    setIsPasswordModalOpen(true);\r\n  };\r\n\r\n  const handlePasswordChange = async (values) => {\r\n    try {\r\n      await axios.put(`http://159.89.167.135:3000/api/admin/changePassword/${editingUser.id}`, {\r\n        password: values.password,\r\n      });\r\n      message.success('Password changed successfully');\r\n      setIsPasswordModalOpen(false);\r\n      passwordForm.resetFields();\r\n    } catch (error) {\r\n      console.error('Error changing password:', error);\r\n      message.error('Failed to change password');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { title: 'S.No', dataIndex: 'id', key: 'id' },\r\n    { title: 'First Name', dataIndex: 'firstName', key: 'firstName' },\r\n    { title: 'Last Name', dataIndex: 'lastName', key: 'lastName' },\r\n    { title: 'Email', dataIndex: 'email', key: 'email' },\r\n    { title: 'Role', dataIndex: 'roleName', key: 'roleName' },\r\n    {\r\n      title: 'Actions',\r\n      key: 'actions',\r\n      render: (text, record) => (\r\n        <span>\r\n          {hasPermission(9, 'edit') && (\r\n            <Button type=\"link\" onClick={() => handleEditUser(record)}>Edit</Button>\r\n          )}\r\n          {hasPermission(9, 'edit') && (\r\n            <Button\r\n              type=\"link\"\r\n              icon={<LockOutlined />}\r\n              onClick={() => handleChangePassword(record)}\r\n            >\r\n              Change Password\r\n            </Button>\r\n          )}\r\n          {hasPermission(9, 'delete') && (\r\n            <Popconfirm title=\"Are you sure to delete this user?\" onConfirm={() => handleDeleteUser(record.id)}>\r\n              <Button type=\"link\" danger>Delete</Button>\r\n            </Popconfirm>\r\n          )}\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"admin-users\">\r\n      <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <h2>Admin Users</h2>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <Input\r\n            placeholder=\"Search users\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            style={{ marginRight: 16, width: 200, borderRadius: 0 }}\r\n          />\r\n          {hasPermission(9, 'add') && (\r\n            <Button type=\"primary\" onClick={toggleModal} style={{ borderRadius: 0 }}>\r\n              Add User\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={filteredData}\r\n        rowKey=\"id\"\r\n        pagination={{ pageSize: 10, showSizeChanger: false, position: ['bottomRight'] }}\r\n      />\r\n\r\n      {/* Add/Edit User Modal */}\r\n      <Modal\r\n        title={isEditing ? \"Edit User\" : \"Add New User\"}\r\n        visible={isModalOpen}\r\n        onCancel={toggleModal}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={form}\r\n          onFinish={isEditing ? handleUpdateUser : handleAddUser}\r\n        >\r\n          <Form.Item label=\"Name\" style={{ marginBottom: 0 }}>\r\n            <Form.Item\r\n              name=\"firstName\"\r\n              rules={[{ required: true, message: 'Please enter the first name' }]}\r\n              style={{ display: 'inline-block', width: 'calc(50% - 8px)' }}\r\n            >\r\n              <Input placeholder=\"First Name\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"lastName\"\r\n              rules={[{ required: true, message: 'Please enter the last name' }]}\r\n              style={{ display: 'inline-block', width: 'calc(50% - 8px)', marginLeft: '16px' }}\r\n            >\r\n              <Input placeholder=\"Last Name\" />\r\n            </Form.Item>\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            rules={[{ required: true, message: 'Please enter a valid email', type: 'email' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          {!isEditing && (\r\n            <>\r\n              <Form.Item\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                rules={[{ required: true, message: 'Please enter the password' }]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"confirmPassword\"\r\n                label=\"Confirm Password\"\r\n                dependencies={['password']}\r\n                rules={[\r\n                  { required: true, message: 'Please confirm the password' },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue('password') === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(new Error('The passwords do not match!'));\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n            </>\r\n          )}\r\n          <Form.Item\r\n            name=\"isAdministrator\"\r\n            valuePropName=\"checked\"\r\n          >\r\n            <Checkbox\r\n              checked={isAdministrator}\r\n              onChange={(e) => setIsAdministrator(e.target.checked)}\r\n            >\r\n              Administrator\r\n            </Checkbox>\r\n          </Form.Item>\r\n          {!isAdministrator && (\r\n            <Form.Item\r\n              name=\"role\"\r\n              label=\"Role\"\r\n              rules={[{ required: !isAdministrator, message: 'Please select a role' }]}\r\n            >\r\n              <Select placeholder=\"Select Role\">\r\n          {roles.map((role) => (\r\n            <Select.Option key={role.id} value={role.id}>\r\n              {role.rm_role_name}\r\n            </Select.Option>\r\n          ))}\r\n        </Select>\r\n            </Form.Item>\r\n          )}\r\n          <Form.Item className=\"form-buttons\" style={{ textAlign: 'right' }}>\r\n            <Button type=\"default\" onClick={toggleModal} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {isEditing ? \"Update User\" : \"Add User\"}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n\r\n\r\n      {/* Change Password Modal */}\r\n      <Modal\r\n        title=\"Change Password\"\r\n        visible={isPasswordModalOpen}\r\n        onCancel={() => setIsPasswordModalOpen(false)}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={passwordForm}\r\n          onFinish={handlePasswordChange}\r\n        >\r\n          <Form.Item\r\n            name=\"password\"\r\n            label=\"New Password\"\r\n            rules={[{ required: true, message: 'Please enter the new password' }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            dependencies={['password']}\r\n            rules={[\r\n              { required: true, message: 'Please confirm the password' },\r\n              ({ getFieldValue }) => ({\r\n                validator(_, value) {\r\n                  if (!value || getFieldValue('password') === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(new Error('The passwords do not match!'));\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item className=\"form-buttons\" style={{ textAlign: 'right' }}>\r\n            <Button type=\"default\" onClick={() => setIsPasswordModalOpen(false)} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Change Password\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUsers;\r\n","// This icon file is generated automatically.\nvar LockOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z\" } }] }, \"name\": \"lock\", \"theme\": \"outlined\" };\nexport default LockOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LockOutlinedSvg from \"@ant-design/icons-svg/es/asn/LockOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar LockOutlined = function LockOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LockOutlinedSvg\n  }));\n};\nLockOutlined.displayName = 'LockOutlined';\nexport default /*#__PURE__*/React.forwardRef(LockOutlined);"],"names":["Select","useState","isModalOpen","setIsModalOpen","isEditing","setIsEditing","editingUser","setEditingUser","userData","setUserData","filteredData","setFilteredData","roles","setRoles","Form","form","isAdministrator","setIsAdministrator","isPasswordModalOpen","setIsPasswordModalOpen","passwordForm","permissions","setPermissions","searchQuery","setSearchQuery","useEffect","fetchUsers","fetchRoles","loadPermissions","setFieldsValue","firstName","lastName","email","role","roleName","au_is_administrator","resetFields","filtered","filter","user","toLowerCase","includes","storedPermissions","JSON","parse","localStorage","getItem","hasPermission","menuId","action","length","permission","find","perm","menu_id","axios","response","data","console","error","message","toggleModal","handleAddUser","values","handleUpdateUser","id","handleDeleteUser","handlePasswordChange","password","columns","title","dataIndex","key","render","text","record","type","onClick","handleEditUser","icon","LockOutlined","handleChangePassword","onConfirm","danger","className","style","display","justifyContent","alignItems","placeholder","value","onChange","e","target","marginRight","width","borderRadius","dataSource","rowKey","pagination","pageSize","showSizeChanger","position","visible","onCancel","footer","onFinish","label","marginBottom","name","rules","required","marginLeft","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","valuePropName","checked","map","rm_role_name","textAlign","htmlType","props","ref","React","AntdIcon","_objectSpread","LockOutlinedSvg","displayName"],"sourceRoot":""}