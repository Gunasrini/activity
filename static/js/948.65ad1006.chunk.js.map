{"version":3,"file":"static/js/948.65ad1006.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","components/util-components/Icon/index.js","components/util-components/IntlMessage/index.js","configs/NavigationConfig.js","components/layout-components/MenuContent.js","components/layout-components/SideNav.js","components/layout-components/TopNav.js","components/layout-components/Logo.js","components/layout-components/MobileNav.js","components/layout-components/NavItem.js","components/layout-components/NavProfile.js","components/layout-components/NavLanguage.js","components/layout-components/NavSearch/SearchInput.js","components/layout-components/NavSearch/index.js","components/layout-components/HeaderNav/Header.js","components/layout-components/HeaderNav/HeaderWrapper.js","components/layout-components/HeaderNav/Nav.js","components/layout-components/HeaderNav/NavEdge.js","components/layout-components/HeaderNav/index.js","components/layout-components/AppBreadcrumb.js","components/layout-components/PageHeader.js","components/layout-components/Footer.js","layouts/AppLayout.js","utils/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, { Component } from 'react'\r\n\r\nexport class Icon extends Component {\r\n\trender() {\r\n\t\tconst { type, className  } = this.props;\r\n\t\treturn (\r\n\t\t\t<>{React.createElement(type, { className: className })}</>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Icon\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst IntlMessage = ({ id, fallback }) => {\r\n\r\n\tconst { t } = useTranslation()\r\n\r\n\tconst translate = t(id, fallback)\r\n\r\n\treturn <>{translate}</>\r\n}\r\n\r\nexport default IntlMessage;\r\n","import { \r\n  DashboardOutlined, \r\n  DotChartOutlined,\r\n  FundOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  TrophyOutlined,\r\n  FileTextOutlined,\r\n  SettingOutlined,\r\n  UserSwitchOutlined,\r\n  SafetyOutlined,\r\n  TeamOutlined,\r\n  AppstoreAddOutlined\r\n} from '@ant-design/icons';\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from 'configs/AppConfig'\r\n\r\n\r\nconst iconMap = {\r\n  DashboardOutlined,\r\n  DotChartOutlined,\r\n  FundOutlined,\r\n  UserOutlined,\r\n  CalendarOutlined,\r\n  TrophyOutlined,\r\n  FileTextOutlined,\r\n  SettingOutlined,\r\n  UserSwitchOutlined,\r\n  SafetyOutlined,\r\n  TeamOutlined,\r\n  AppstoreAddOutlined\r\n};\r\n\r\n// Load menuList from localStorage and parse it\r\n// const menuList = JSON.parse(localStorage.getItem('user_menu'));\r\nconst menuList = JSON.parse(localStorage.getItem('user_menu') || '[]');\r\nconst transformMenuToNavTree = (menuData) => {\r\n  return menuData.map(item => ({\r\n    key: item.name,\r\n    path: `${APP_PREFIX_PATH}${item.path}`,\r\n    title: item.name,\r\n    icon: iconMap[item.icon] || null,  // Map icon using iconMap\r\n    breadcrumb: false,\r\n    isGroupTitle: false,\r\n    submenu: item.submenu ? transformMenuToNavTree(item.submenu) : []\r\n  }));\r\n};\r\n\r\nconst dashBoardNavTree = transformMenuToNavTree(menuList || []);\r\n\r\nconst navigationConfig = [\r\n  ...dashBoardNavTree,\r\n];\r\n\r\nexport default navigationConfig;\r\n","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Grid } from 'antd';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport Icon from '../util-components/Icon';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (localeKey, isLocaleOn = true) =>\r\n\tisLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n\tlet keyList = [];\r\n\tlet keyString = \"\";\r\n\tif (key) {\r\n\t\tconst arr = key.split(\"-\");\r\n\t\tfor (let index = 0; index < arr.length; index++) {\r\n\t\t\tconst elm = arr[index];\r\n\t\t\tindex === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n\t\t\tkeyList.push(keyString);\r\n\t\t}\r\n\t}\r\n\treturn keyList;\r\n};\r\n\r\nconst MenuItem = ({title, icon, path}) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tdispatch(onMobileNavToggle(false))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{icon && <Icon type={icon} /> }\r\n\t\t\t<span>{setLocale(title)}</span>\r\n\t\t\t{path && <Link onClick={closeMobileNav} to={path} />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst getSideNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} {...(nav.isGroupTitle ? {} : {path: nav.path, icon: nav.icon})} />,\r\n\t\t...(nav.isGroupTitle ? {type: 'group'} : {}),\r\n\t\t...(nav.submenu.length > 0 ? {children: getSideNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst getTopNavMenuItem = (navItem) => navItem.map(nav => {\r\n\treturn {\r\n\t\tkey: nav.key,\r\n\t\tlabel: <MenuItem title={nav.title} icon={nav.icon} {...(nav.isGroupTitle ? {} : {path: nav.path})} />,\r\n\t\t...(nav.submenu.length > 0 ? {children: getTopNavMenuItem(nav.submenu)} : {})\r\n\t}\r\n})\r\n\r\nconst SideNavContent = (props) => {\r\n\r\n\tconst { routeInfo, hideGroupTitle, sideNavTheme = SIDE_NAV_LIGHT } = props;\r\n\r\n\tconst menuItems = useMemo(() => getSideNavMenuItem(navigationConfig), []);\r\n\r\n\treturn (\r\n\t\t<Menu\r\n\t\t\tmode=\"inline\"\r\n\t\t\ttheme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n\t\t\tstyle={{ height: \"100%\", borderInlineEnd: 0 }}\r\n\t\t\tdefaultSelectedKeys={[routeInfo?.key]}\r\n\t\t\tdefaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n\t\t\tclassName={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst TopNavContent = () => {\r\n\r\n\tconst topNavColor = useSelector(state => state.theme.topNavColor);\r\n\r\n\tconst menuItems = useMemo(() => getTopNavMenuItem(navigationConfig), [])\r\n\r\n\treturn (\r\n\t\t<Menu \r\n\t\t\tmode=\"horizontal\" \r\n\t\t\tstyle={{ backgroundColor: topNavColor }}\r\n\t\t\titems={menuItems}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n\treturn props.type === NAV_TYPE_SIDE ? (\r\n\t\t<SideNavContent />\r\n\t) : (\r\n\t\t<TopNavContent {...props} />\r\n\t);\r\n};\r\n\r\nexport default MenuContent;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_DARK, NAV_TYPE_SIDE } from 'constants/ThemeConstant';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport MenuContent from './MenuContent';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, GRAY_SCALE, DARK_MODE } from \"constants/ThemeConstant\";\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport const SideNav = ({navCollapsed, routeInfo, hideGroupTitle, currentTheme }) => {\r\n  const sideNavTheme = useSelector(state => state.theme.sideNavTheme);\r\n  const props = { sideNavTheme, routeInfo , hideGroupTitle }\r\n  return (\r\n    <Sider \r\n      css={css`\r\n        height: calc(100vh - ${TEMPLATE.HEADER_HEIGHT}px); \r\n        position: fixed !important;\r\n        top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n        box-shadow: 0 1px 4px -1px rgba(0,0,0,.15);\r\n        z-index: 999;\r\n        direction: ltr;\r\n        ${currentTheme === 'light' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${GRAY_SCALE.WHITE} !important;`  : `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important;`}\r\n        ${currentTheme === 'dark' && sideNavTheme !== SIDE_NAV_DARK ? `background-color: ${DARK_MODE.BG_COLOR} !important`  : ``}\r\n        ${currentTheme === 'dark' && sideNavTheme === SIDE_NAV_DARK ? `background-color: ${TEMPLATE.SIDE_NAV_DARK_BG_COLOR} !important`  : ``}\r\n      `}\r\n      className={`side-nav ${sideNavTheme === SIDE_NAV_DARK? 'side-nav-dark' : ''}`} \r\n      width={SIDE_NAV_WIDTH} \r\n      collapsed={navCollapsed}\r\n    >\r\n      <Scrollbars autoHide>\r\n        <MenuContent \r\n          type={NAV_TYPE_SIDE}\r\n          {...props}\r\n        />\r\n      </Scrollbars>\r\n    </Sider>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, sideNavTheme, currentTheme } =  theme;\r\n  return { navCollapsed, sideNavTheme, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SideNav);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\nimport MenuContent from './MenuContent'\r\nimport styled from '@emotion/styled';\r\nimport { TEMPLATE, WHITE, GRAY } from 'constants/ThemeConstant';\r\n\r\nconst TopNvContent = styled('div')`\r\n\theight: ${TEMPLATE.HEADER_HEIGHT}px;\r\n\tbackground-color: ${props => props.backgroundColor ? props.backgroundColor : '#001529'};\r\n\tposition: fixed;\r\n\ttop: ${TEMPLATE.HEADER_HEIGHT}px;\r\n\twidth: 100%;\r\n\tz-index: @zindex-modal;\r\n\tbox-shadow: 0 0.75rem 1.5rem rgba(18,38,63,.03);\r\n\r\n\t.top-nav-wrapper {\r\n\t\tmax-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\r\n\t\t.ant-menu-horizontal {\r\n\t\t\tline-height: ${TEMPLATE.HEADER_HEIGHT}px;\r\n\t\t\tborder-bottom: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t${props => props.mode === 'light' ? `\r\n\t\t.ant-menu {\r\n\t\t\tcolor: ${WHITE};\r\n\r\n\t\t\t.ant-menu-item:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected), \r\n\t\t\t.ant-menu-submenu-title:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected),\r\n\t\t\t.ant-menu-submenu-selected >.ant-menu-submenu-title {\r\n\t\t\t\tcolor: rgba(255, 255, 255, 0.75)\r\n\t\t\t}\r\n\t\t}\r\n    ` : '' }\r\n\r\n\t${props => props.mode === 'dark' ? `\r\n\t\t.ant-menu {\r\n\t\t\tcolor: ${GRAY};\r\n\r\n\t\t\t.ant-menu-item:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected), \r\n\t\t\t.ant-menu-submenu-title:hover:not(.ant-menu-item-selected):not(.ant-menu-submenu-selected),\r\n\t\t\t.ant-menu-submenu-selected >.ant-menu-submenu-title {\r\n\t\t\t\tcolor: rgba(0, 0, 0, 0.75)\r\n\t\t\t}\r\n\t\t}\r\n    ` : '' }\r\n`\r\n\r\nexport const TopNav = ({topNavColor }) => {\r\n\tconst props = { topNavColor }\r\n\treturn (\r\n\t\t<TopNvContent mode={utils.getColorContrast(topNavColor)} backgroundColor={topNavColor}>\r\n\t\t\t<div className=\"top-nav-wrapper\">\r\n\t\t\t\t<MenuContent\r\n\t\t\t\t\ttype={NAV_TYPE_TOP} \r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</TopNvContent>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { topNavColor } =  theme;\r\n  return { topNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps)(TopNav);\r\n","import React from 'react'\r\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { useSelector } from 'react-redux';\r\nimport utils from 'utils';\r\nimport { Grid } from 'antd';\r\nimport styled from '@emotion/styled';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\n\r\nconst LogoWrapper = styled.div(() => ({\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tpadding: '0 1rem',\r\n\tbackgroundColor: 'transparent',\r\n\ttransition: 'all .2s ease',\r\n}));\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const Logo = ({ mobileLogo, logoType }) => {\r\n\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed);\r\n\tconst navType = useSelector(state => state.theme.navType);\r\n\r\n\tconst getLogoWidthGutter = () => {\r\n\t\tconst isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n\t\tif(isMobile && !mobileLogo) {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t\tif(isNavTop) {\r\n\t\t\treturn 'auto'\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst getLogo = () => {\r\n\t\tif(logoType === 'light') {\r\n\t\t\tif(navCollapsed) {\r\n\t\t\treturn '/img/logo-sm-white.png'\r\n\t\t\t}\r\n\t\t\treturn '/img/logo-white.png'\r\n\t\t}\r\n\t\r\n\t\tif (navCollapsed) {\r\n\t\t\treturn '/img/Fitness-logo.png'\r\n\t\t}\r\n\t\treturn '/img/Fitness-logo.png'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<LogoWrapper className={isMobile && !mobileLogo ? 'd-none' : 'logo'} style={{width: `${getLogoWidthGutter()}`}}>\r\n\t\t\t<img src={getLogo()} alt={`${APP_NAME} logo`} style={{height:'70px'}}/>\r\n\t\t</LogoWrapper>\r\n\t)\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport { Drawer } from \"antd\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport { Scrollbars } from \"react-custom-scrollbars-2\";\r\nimport MenuContent from \"./MenuContent\";\r\nimport { onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport Logo from \"./Logo\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\n\r\nexport const MobileNav = ({\r\n\trouteInfo,\r\n\thideGroupTitle\r\n}) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme);\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav);\r\n\r\n\tconst menuContentprops = { routeInfo, hideGroupTitle };\r\n\r\n\tconst onClose = () => {\r\n\t\tdispatch(onMobileNavToggle(false));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onClose}\r\n\t\t\topen={mobileNav}\r\n\t\t\tbodyStyle={{ padding: 5 }}\r\n\t\t\twidth={300}\r\n\t\t>\r\n\t\t\t<Flex flexDirection=\"column\" className=\"h-100\">\r\n\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t<Logo logoType={currentTheme === 'dark' ? 'light' : 'dark'} mobileLogo={true} />\r\n\t\t\t\t\t<div className=\"px-3\" onClick={() => onClose()}>\r\n\t\t\t\t\t\t<ArrowLeftOutlined />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div className=\"h-100\">\r\n\t\t\t\t\t<Scrollbars autoHide>\r\n\t\t\t\t\t\t<MenuContent type={NAV_TYPE_SIDE} {...menuContentprops} />\r\n\t\t\t\t\t</Scrollbars>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Drawer>\r\n\t);\r\n};\r\n\r\nexport default MobileNav;\r\n","import styled from '@emotion/styled';\r\nimport { \r\n    GRAY_SCALE,\r\n} from 'constants/ThemeConstant'\r\nimport { baseTheme, rgba } from 'configs/ThemeConfig'\r\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant'\r\n\r\nconst isDark = (mode) => {\r\n    return mode === 'dark'\r\n}\r\n\r\nconst NavItem = styled('div')`\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 1.5;\r\n    cursor: pointer;\r\n    padding: 0 1rem;\r\n    color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\r\n\r\n    @media ${MEDIA_QUERIES.MOBILE} {\r\n\t\tpadding: 0 0.75rem;\r\n\t}\r\n\r\n    .ant-badge {\r\n        color: ${props => isDark(props.mode) ?  GRAY_SCALE.GRAY : rgba(GRAY_SCALE.WHITE, 0.85) };\r\n    }\r\n\r\n    .nav-icon {\r\n        font-size: 1.25rem;\r\n    }\r\n\r\n    &:hover,\r\n    &.ant-dropdown-open,\r\n    &.ant-popover-open {\r\n        > * {\r\n            color: ${props => isDark(props.mode) ? baseTheme.colorPrimary : GRAY_SCALE.WHITE};\r\n        }\r\n\r\n        .profile-text {\r\n            color: ${props => isDark(props.mode) ? GRAY_SCALE.GRAY : GRAY_SCALE.WHITE};\r\n        }\r\n    }\r\n`\r\n\r\nexport default NavItem","import React from 'react';\r\nimport { Dropdown, Avatar } from 'antd';\r\nimport { useDispatch } from 'react-redux'\r\nimport { \r\n\tEditOutlined, \r\n\tSettingOutlined, \r\n\tShopOutlined, \r\n\tQuestionCircleOutlined, \r\n\tLogoutOutlined \r\n} from '@ant-design/icons';\r\nimport NavItem from './NavItem';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { signOut } from 'store/slices/authSlice';\r\nimport styled from '@emotion/styled';\r\nimport { FONT_WEIGHT, MEDIA_QUERIES, SPACER, FONT_SIZES } from 'constants/ThemeConstant'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Icon = styled.div(() => ({\r\n\tfontSize: FONT_SIZES.LG\r\n}))\r\n\r\nconst Profile = styled.div(() => ({\r\n\tdisplay: 'flex',\r\n\talignItems: 'center'\r\n}))\r\n\r\nconst UserInfo = styled('div')`\r\n\tpadding-left: ${SPACER[2]};\r\n\r\n\t@media ${MEDIA_QUERIES.MOBILE} {\r\n\t\tdisplay: none\r\n\t}\r\n`\r\n\r\nconst Name = styled.div(() => ({\r\n\tfontWeight: FONT_WEIGHT.SEMIBOLD\r\n}))\r\n\r\nconst Title = styled.span(() => ({\r\n\topacity: 0.8\r\n}))\r\n\r\n\r\nconst MenuItem = (props) => (\r\n\t<Flex as=\"a\" href={props.path} alignItems=\"center\" gap={SPACER[2]}>\r\n\t\t<Icon>{props.icon}</Icon>\r\n\t\t<span>{props.label}</span>\r\n\t</Flex>\r\n)\r\n\r\nconst MenuItemSignOut = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleSignOut = () => {\r\n\t\tdispatch(signOut());\r\n\t\tlocalStorage.removeItem('user_menu');\r\n\t\tlocalStorage.removeItem('AUTH_TOKEN');\r\n\t\tlocalStorage.removeItem('permissions');\r\n\t\tlocalStorage.removeItem('user_name');\r\n\t\twindow.location.reload();\t\t\r\n\t  };\r\n\r\n\treturn (\r\n\t\t<div onClick={handleSignOut}>\r\n\t\t\t<Flex alignItems=\"center\" gap={SPACER[2]} >\r\n\t\t\t\t<Icon>\r\n\t\t\t\t\t<LogoutOutlined />\r\n\t\t\t\t</Icon>\r\n\t\t\t\t<span>{props.label}</span>\r\n\t\t\t</Flex>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst items = [\r\n\t{\r\n\t\tkey: 'Edit Profile',\r\n\t\tlabel: <MenuItem path=\"/\" label=\"Edit Profile\" icon={<EditOutlined />} />,\r\n\t},\r\n\t{\r\n\t\tkey: 'Account Setting',\r\n\t\tlabel: <MenuItem path=\"/\" label=\"Account Setting\" icon={<SettingOutlined />} />,\r\n\t},\r\n\t{\r\n\t\tkey: 'Account Billing',\r\n\t\tlabel: <MenuItem path=\"/\" label=\"Account Billing\" icon={<ShopOutlined />} />,\r\n\t},\r\n\t{\r\n\t\tkey: 'Help Center',\r\n\t\tlabel: <MenuItem path=\"/\" label=\"Help Center\" icon={<QuestionCircleOutlined />} />,\r\n\t},\r\n\t{\r\n\t\tkey: 'Sign Out',\r\n\t\tlabel: <MenuItemSignOut label=\"Sign Out\" />,\r\n\t}\r\n]\r\n\r\nexport const NavProfile = ({mode}) => {\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" menu={{items}} trigger={[\"click\"]}>\r\n\t\t\t<NavItem mode={mode}>\r\n\t\t\t\t<Profile>\r\n\t\t\t\t\t<Avatar src=\"/img/avatars/profile.jpg\" />\r\n\t\t\t\t\t<UserInfo className=\"profile-text\">\r\n\t\t\t\t\t\t<Name>Prabakaran</Name>\r\n\t\t\t\t\t\t<Title>Full Stack Developer</Title>\r\n\t\t\t\t\t</UserInfo>\r\n\t\t\t\t</Profile>\r\n\t\t\t</NavItem>\r\n\t\t</Dropdown>\r\n\t);\r\n}\r\n\r\nexport default NavProfile\r\n","/** @jsxImportSource @emotion/react */\r\nimport { CheckOutlined, GlobalOutlined, DownOutlined  } from '@ant-design/icons';\r\nimport { Menu, Dropdown } from 'antd';\r\nimport NavItem from './NavItem'\r\nimport lang from 'assets/data/language.data.json';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { onLocaleChange } from 'store/slices/themeSlice';\r\nimport i18n from 'i18next'\r\nimport { SPACER } from 'constants/ThemeConstant';\r\nimport { baseTheme } from 'configs/ThemeConfig';\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { css } from '@emotion/react';\r\n\r\nfunction getLanguageDetail (locale) {\r\n\tconst data = lang.filter(elm => (elm.langId === locale))\r\n\treturn data[0]\r\n}\r\n\r\nconst SelectedLanguage = () => {\r\n\r\n\tconst locale = useSelector(state => state.theme.locale)\r\n\r\n\tconst language = getLanguageDetail(locale);\r\n\tconst {langName, icon} = language;\r\n\r\n\treturn (\r\n\t\t<Flex alignItems=\"center\">\r\n\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${icon}.png`} alt={langName}/>\r\n\t\t\t<span className=\"font-weight-semibold ml-2\">{langName} <DownOutlined className=\"font-size-xs\"/></span>\r\n\t\t</Flex>\r\n\t)\r\n}\r\n\r\n\r\nconst MenuItem = (props) => {\r\n\tconst locale = useSelector(state => state.theme.locale);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleLocaleChange = (langId) => {\r\n\t\tdispatch(onLocaleChange(langId))\r\n\t\ti18n.changeLanguage(langId)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<span>\r\n\t\t\t<Flex \r\n\t\t\t\talignItems=\"center\" \r\n\t\t\t\tjustifyContent=\"space-between\"\r\n\t\t\t\tgap={SPACER[4]}\r\n\t\t\t\tonClick={() => handleLocaleChange(props.langId)}\r\n\t\t\t>\r\n\t\t\t\t<Flex alignItems=\"center\" gap={SPACER[2]}>\r\n\t\t\t\t\t<img style={{maxWidth: '20px'}} src={`/img/flags/${props.icon}.png`} alt={props.langName}/>\r\n\t\t\t\t\t<span className=\"font-weight-normal ml-2\">{props.langName}</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t{locale === props.langId ? <CheckOutlined css={css`color: ${baseTheme.colorSuccess}`} /> : null}\r\n\t\t\t</Flex>\r\n\t\t</span>\r\n\t)\r\n}\r\n\r\nconst items = [\r\n\t{\r\n\t\tkey: 'En',\r\n\t\tlabel: <MenuItem icon=\"us\" langName=\"English\" langId=\"en\" />\r\n\t},\r\n\t{\r\n\t\tkey: 'Ch',\r\n\t\tlabel: <MenuItem icon=\"cn\" langName=\"Chinese\" langId=\"zh\" />\r\n\t},\r\n\t{\r\n\t\tkey: 'Fr',\r\n\t\tlabel: <MenuItem icon=\"fr\" langName=\"French\" langId=\"fr\" />\r\n\t},\r\n\t{\r\n\t\tkey: 'Jp',\r\n\t\tlabel: <MenuItem icon=\"jp\" langName=\"Janpanese\" langId=\"ja\" />\r\n\t}\r\n];\r\n\r\n\r\nexport const NavLanguage = ({ configDisplay, mode }) => {\r\n\r\n\treturn (\r\n\t\t<Dropdown placement=\"bottomRight\" menu={{items}} trigger={[\"click\"]}>\r\n\t\t\t{\r\n\t\t\t\tconfigDisplay ?\r\n\t\t\t\t(\r\n\t\t\t\t\t<a href=\"#/\" className=\"text-gray\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t<SelectedLanguage />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\t(\r\n\t\t\t\t\t<NavItem mode={mode}>\r\n\t\t\t\t\t\t<GlobalOutlined className=\"nav-icon mr-0\" />\r\n\t\t\t\t\t</NavItem>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nexport default NavLanguage;\r\n","/** @jsxImportSource @emotion/react */\r\nimport { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { BODY_BACKGROUND, GRAY_SCALE, DARK_MODE } from 'constants/ThemeConstant'\r\nimport Flex from 'components/shared-components/Flex';\r\nimport { css } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst SearchResultIcon = styled.div(() => ({\r\n\tfontSize: '1.5rem',\r\n\tmarginRight: '1rem'\r\n}));\r\n\r\nconst SearchResultTitle = styled.div(({mode}) => ({\r\n\tcolor: mode === 'light' ? DARK_MODE.HEADING_COLOR : GRAY_SCALE.GRAY_DARK,\r\n\tfontWeight: '500'\r\n}));\r\n\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboard':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = (mode) => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<Flex alignItems=\"center\" padding=\"7px 12px\">\r\n\t\t\t\t\t<SearchResultIcon>\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</SearchResultIcon>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<SearchResultTitle mode={mode}>\r\n\t\t\t\t\t\t\t<IntlMessage id={item.title} />\r\n\t\t\t\t\t\t</SearchResultTitle>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(mode))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tcss={css`\r\n\t\t\t\t${!isMobile ? `\r\n\t\t\t\t\tmin-width: 300px;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\r\n\t\t\t\t\t.ant-input-affix-wrapper {\r\n\t\t\t\t\t\tbackground-color: ${mode === 'light' ? '#1b2531' : BODY_BACKGROUND};\r\n\t\t\t\r\n\t\t\t\t\t\t.ant-input {\r\n\t\t\t\t\t\t\tbackground-color: transparent;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t.ant-input-prefix {\r\n\t\t\t\t\t\t\tcolor: ${GRAY_SCALE.GRAY_LIGHT};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t` : ''}\r\n\t\t\t`}\r\n\t\t\tpopupClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport utils from 'utils'\r\nimport styled from '@emotion/styled';\r\nimport SearchInput from './SearchInput';\r\nimport { TEMPLATE, FONT_SIZES } from 'constants/ThemeConstant';\r\n\r\nconst SeachWrapper = styled.div(({active, mode, headerBg}) => ({\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n    padding: '0 1.5rem',\r\n    position: 'absolute',\r\n    width: '100%',\r\n    backgroundColor: headerBg,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    fontSize: FONT_SIZES.LG,\r\n    top: active ? 0 : -TEMPLATE.HEADER_HEIGHT,\r\n    transition: 'all 0.3s ease'\r\n}))\r\n\r\nconst NavItem = styled('div')`\r\n\theight: ${TEMPLATE.HEADER_HEIGHT}px;\r\n\tpadding: 0 1.5rem;\r\n\tposition: absolute;\r\n\twidth: 100%;\r\n\tbackground-color: ${ props => props.headerBg };\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tfont-size: ${FONT_SIZES.LG};\r\n\ttop: ${props => props.active ? 0 : -TEMPLATE.HEADER_HEIGHT};\r\n\ttransition: all 0.3s ease;\r\n\r\n\t${props => props.mode === 'light' ? `\r\n\t\t.ant-select-selection-search-input {\r\n\t\t\tcolor: @white;\r\n\t\t}\r\n\r\n\t\t.ant-select-selection-placeholder {\r\n\t\t\tcolor: rgba(@white, 0.85);\r\n\t\t}\r\n\t` : ''}\r\n`\r\n\r\nexport const NavSearch = (props) => {\r\n\tconst { active, close, headerNavColor, currentTheme, mode } = props\r\n\r\n\tconst headerBgBase = currentTheme === 'dark' ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\r\n\t\r\n\treturn (\r\n\t\t<SeachWrapper active={active} mode={mode} headerBg={headerNavColor || headerBgBase}>\r\n\t\t\t<SearchInput close={close} active={active} mode={mode}/>\r\n\t\t\t<div className=\"nav-close\" onClick={close}>\r\n\t\t\t\t<CloseOutlined />\r\n\t\t\t</div>\r\n\t\t</SeachWrapper>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { headerNavColor } =  theme;\r\n  return { headerNavColor }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(NavSearch)","import styled from '@emotion/styled';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\n\r\nconst Header = styled.div(({headerNavColor, isDarkTheme}) => ({\r\n\tposition: 'fixed',\r\n\twidth: '100%',\r\n\tleft: 0,\r\n\tzIndex: 1000,\r\n\tdisplay: 'flex',\r\n\tflex: '0 0 auto',\r\n\theight: TEMPLATE.HEADER_HEIGHT,\r\n\tlineHeight: `${TEMPLATE.HEADER_HEIGHT}px`,\r\n\tbackgroundColor: headerNavColor,\r\n\tboxShadow: isDarkTheme ? '0 1px 8px -1px rgb(0 0 0 / 75%)' : '0 1px 4px -1px rgb(0 0 0 / 15%)'\r\n}))\r\n\r\n\r\nexport default Header","import styled from '@emotion/styled';\r\n\r\nconst HeaderWrapper = styled.div(({isNavTop}) => ({\r\n\twidth: '100%',\r\n\tdisplay: 'flex',\r\n\t...isNavTop ? {maxWidth: isNavTop, margin: 'auto'} : {}\r\n}))\r\n\r\n\r\nexport default HeaderWrapper","import styled from '@emotion/styled';\r\n\r\nconst Nav = styled.div(({navWidth}) => ({\r\n\tdisplay: 'flex',\r\n\tjustifyContent: 'space-between',\r\n\tposition: 'relative',\r\n\ttransition: 'all .2s ease',\r\n\twidth: `calc(100% - ${navWidth})`\r\n}))\r\n\r\nexport default Nav","import styled from '@emotion/styled';\r\n\r\nconst NavEdge = styled.div(({left, right}) => {\r\n\r\n\tif (left) {\r\n\t\treturn {\r\n\t\t\tdisplay: 'flex'\r\n\t\t}\r\n\t}\r\n\r\n\tif (right) {\r\n\t\treturn {\r\n\t\t\tmarginLeft: 'auto',\r\n\t\t\tpadding: '0 1rem',\r\n\t\t\tdisplay: 'flex'\r\n\t\t}\r\n\t}\r\n\r\n\treturn {}\r\n})\r\n\r\nexport default NavEdge","/** @jsxImportSource @emotion/react */\r\nimport { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TEMPLATE } from 'constants/ThemeConstant';\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from '../Logo';\r\nimport NavNotification from '../NavNotification';\r\nimport NavProfile from '../NavProfile';\r\nimport NavLanguage from '../NavLanguage';\r\nimport NavPanel from '../NavPanel';\r\nimport NavSearch  from '../NavSearch';\r\nimport SearchInput from '../NavSearch/SearchInput';\r\nimport Header from './Header';\r\nimport HeaderWrapper from './HeaderWrapper';\r\nimport Nav from './Nav'\r\nimport NavEdge from './NavEdge';\r\nimport NavItem from '../NavItem';\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'store/slices/themeSlice';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nexport const HeaderNav = props => {\r\n\r\n\tconst { isMobile } = props;\r\n\r\n\tconst [searchActive, setSearchActive] = useState(false);\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst navCollapsed = useSelector(state => state.theme.navCollapsed)\r\n\tconst mobileNav = useSelector(state => state.theme.mobileNav)\r\n\tconst navType = useSelector(state => state.theme.navType)\r\n\tconst headerNavColor = useSelector(state => state.theme.headerNavColor)\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\tconst direction = useSelector(state => state.theme.direction)\r\n\r\n\tconst onSearchActive = () => {\r\n\t\tsetSearchActive(true)\r\n\t}\r\n\r\n\tconst onSearchClose = () => {\r\n\t\tsetSearchActive(false)\r\n\t}\r\n\r\n\tconst onToggle = () => {\r\n\t\tif(!isMobile) {\r\n\t\t\tdispatch(toggleCollapsedNav(!navCollapsed))\r\n\t\t} else {\r\n\t\t\tdispatch(onMobileNavToggle(!mobileNav))\r\n\t\t}\r\n\t}\r\n\r\n\tconst isNavTop = navType === NAV_TYPE_TOP \r\n\tconst isDarkTheme = currentTheme === 'dark'\r\n\r\n    const navMode = useMemo(() => {\r\n\t\tif(!headerNavColor) {\r\n\t\t\treturn utils.getColorContrast(isDarkTheme ? '#000000' : '#ffffff' )\r\n\t\t}\r\n\t\treturn utils.getColorContrast(headerNavColor);\r\n\t}, [isDarkTheme, headerNavColor])\r\n\r\n\tconst navBgColor = isDarkTheme ? TEMPLATE.HEADER_BG_DEFAULT_COLOR_DARK : TEMPLATE.HEADER_BG_DEFAULT_COLOR_LIGHT;\r\n\r\n\tconst getNavWidth = () => {\r\n\t\tif(isNavTop || isMobile) {\r\n\t\t\treturn '0px';\r\n\t\t}\r\n\t\tif(navCollapsed) {\r\n\t\t\treturn `${SIDE_NAV_COLLAPSED_WIDTH}px`;\r\n\t\t} else {\r\n\t\t\treturn `${SIDE_NAV_WIDTH}px`;\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!isMobile) {\r\n\t\t\tonSearchClose();\r\n\t\t}\r\n\t})\r\n\t\r\n\treturn (\r\n\t\t<Header isDarkTheme={isDarkTheme} headerNavColor={headerNavColor || navBgColor}>\r\n\t\t\t<HeaderWrapper isNavTop={isNavTop}>\r\n\t\t\t\t<Logo logoType={navMode}/>\r\n\t\t\t\t<Nav navWidth={getNavWidth()}>\r\n\t\t\t\t\t<NavEdge left>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisNavTop && !isMobile ? null : (\r\n\t\t\t\t\t\t\t\t<NavItem onClick={onToggle} mode={navMode}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t\t\t{navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{/* {isMobile ?\r\n                            <div className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onSearchActive()}}>\r\n                                <SearchOutlined />\r\n                            </div>\r\n                            :\r\n                            <div className=\"ant-menu-item ant-menu-item-only-child\" style={{cursor: 'auto'}}>\r\n                                <SearchInput mode={navMode} isMobile={isMobile} />\r\n                            </div>\r\n                        } */}\r\n\t\t\t\t\t</NavEdge>\r\n\t\t\t\t\t<NavEdge right>\r\n\t\t\t\t\t\t{/* <NavNotification mode={navMode} />\r\n\t\t\t\t\t\t<NavLanguage mode={navMode} />\r\n\t\t\t\t\t\t<NavPanel direction={direction} mode={navMode} /> */}\r\n\t\t\t\t\t\t<NavProfile mode={navMode} />\r\n\t\t\t\t\t</NavEdge>\r\n\t\t\t\t\t<NavSearch \r\n\t\t\t\t\t\tactive={searchActive} \r\n\t\t\t\t\t\tclose={onSearchClose} \r\n\t\t\t\t\t\theaderNavColor={headerNavColor}\r\n\t\t\t\t\t\tcurrentTheme={currentTheme}\r\n\t\t\t\t\t\tmode={navMode}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Nav>\r\n\t\t\t</HeaderWrapper>\r\n\t\t</Header>\r\n\t)\r\n}\r\n\r\nexport default HeaderNav;","import React, { Component } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Breadcrumb } from 'antd';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nlet breadcrumbData = { \r\n\t'/app' : <IntlMessage id=\"home\" />\r\n};\r\n\r\nnavigationConfig.forEach((elm, i) => {\r\n\tconst assignBreadcrumb = (obj) => breadcrumbData[obj.path] = <IntlMessage id={obj.title} />;\r\n\tassignBreadcrumb(elm);\r\n\tif (elm.submenu) {\r\n\t\telm.submenu.forEach( elm => {\r\n\t\t\tassignBreadcrumb(elm)\r\n\t\t\tif(elm.submenu) {\r\n\t\t\t\telm.submenu.forEach( elm => {\r\n\t\t\t\t\tassignBreadcrumb(elm)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n})\r\n\r\nconst BreadcrumbRoute = props => {\r\n\tconst location = useLocation();\r\n\tconst pathSnippets = location.pathname.split('/').filter(i => i);\r\n\tconst breadcrumbItems = pathSnippets.map((_, index) => {\r\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n\t\treturn {\r\n\t\t\ttitle: <Link to={url}>{breadcrumbData[url]}</Link>\r\n\t\t}\r\n\t});\r\n  \r\n\treturn (\r\n\t\t<Breadcrumb items={breadcrumbItems} />\r\n\t);\r\n};\r\n\r\nexport class AppBreadcrumb extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<BreadcrumbRoute />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default AppBreadcrumb\r\n","/** @jsxImportSource @emotion/react */\r\nimport AppBreadcrumb from 'components/layout-components/AppBreadcrumb';\r\nimport IntlMessage from '../util-components/IntlMessage';\r\nimport { css } from '@emotion/react';\r\nimport { MEDIA_QUERIES } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeader = ({ title, display }) => {\r\n\treturn (\r\n\t\tdisplay ? (\r\n\t\t\t<div\r\n\t\t\t\tcss={css`\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tmargin-bottom: 1rem;\r\n\r\n\t\t\t\t\t@media ${MEDIA_QUERIES.LAPTOP_ABOVE} {\r\n\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t}\r\n\t\t\t\t`}\r\n\t\t\t>\r\n\t\t\t\t<h3 className=\"mb-0 mr-3 font-weight-semibold\">\r\n\t\t\t\t\t<IntlMessage id={title? title : 'home'}/>\r\n\t\t\t\t</h3>\r\n\t\t\t\t<AppBreadcrumb />\r\n\t\t\t</div>\r\n\t\t)\r\n\t\t: null\r\n\t)\r\n}\r\n\r\nexport default PageHeader","/** @jsxImportSource @emotion/react */\r\nimport React from 'react'\r\nimport { APP_NAME } from 'configs/AppConfig';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, MEDIA_QUERIES, DARK_MODE, BORDER } from 'constants/ThemeConstant'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Footer() {\r\n\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\r\n\treturn (\r\n\t\t<footer css={css`\r\n\t\t\theight: ${TEMPLATE.FOOTER_HEIGHT}px;\r\n\t\t\tdisplay: flex;\r\n\t\t\tmargin: 0 ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n\t\t\talign-items: center;\r\n\t\t\tborder-top: 1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR };\r\n\t\t\tjustify-content: space-between;\r\n\t\t\r\n\t\t\t@media ${MEDIA_QUERIES.MOBILE} {\r\n\t\t\t\tjustify-content: center;\r\n       \t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t`}>\r\n\t\t\t{/* <span>Copyright  &copy;  {`${new Date().getFullYear()}`} <span className=\"font-weight-semibold\">{`${APP_NAME}`}</span> All rights reserved.</span> */}\r\n\t\t\t<span>Copyright  &copy;  {`${new Date().getFullYear()}`} Activity All rights reserved.</span>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Term & Conditions</a>\r\n\t\t\t\t<span className=\"mx-2 text-muted\"> | </span>\r\n\t\t\t\t<a className=\"text-gray\" href=\"/#\" onClick={e => e.preventDefault()}>Privacy & Policy</a>\r\n\t\t\t</div>\r\n\t\t</footer>\r\n\t)\r\n}\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport { Layout, Grid,} from 'antd';\r\nimport navigationConfig from 'configs/NavigationConfig';\r\nimport { TEMPLATE, MEDIA_QUERIES } from 'constants/ThemeConstant';\r\nimport styled from '@emotion/styled';\r\nimport utils from 'utils';\r\n\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst AppContent = styled('div')`\r\n    padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px;\r\n    margin-top: ${TEMPLATE.HEADER_HEIGHT}px;\r\n    min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px);\r\n    position: relative;\r\n\r\n    ${props => props.isNavTop ? `\r\n        max-width: ${TEMPLATE.CONTENT_MAX_WIDTH}px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        width: 100%;\r\n\r\n        @media ${MEDIA_QUERIES.DESKTOP} { \r\n            margin-top: ${TEMPLATE.HEADER_HEIGHT + TEMPLATE.TOP_NAV_HEIGHT}px;\r\n            min-height: calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.TOP_NAV_HEIGHT}px);\r\n        }\r\n    ` : '' }\r\n\r\n    @media ${MEDIA_QUERIES.MOBILE} { \r\n        padding: ${TEMPLATE.LAYOUT_CONTENT_GUTTER_SM}px;\r\n    }\r\n`\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, direction, children }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n    const screens = utils.getBreakPoint(useBreakpoint());\r\n    const isMobile = screens.length === 0 ? false : !screens.includes('lg')\r\n    const isNavSide = navType === TEMPLATE.NAV_TYPE_SIDE\r\n    const isNavTop = navType === TEMPLATE.NAV_TYPE_TOP\r\n\r\n    const getLayoutGutter = () => {\r\n        if(isNavTop || isMobile) {\r\n            return 0\r\n        }\r\n        return navCollapsed ? TEMPLATE.SIDE_NAV_COLLAPSED_WIDTH : TEMPLATE.SIDE_NAV_WIDTH\r\n    }\r\n\r\n    const getLayoutDirectionGutter = () => {\r\n        if(direction === TEMPLATE.DIR_LTR) {\r\n            return {paddingLeft: getLayoutGutter()}\r\n        }  \r\n        if(direction === TEMPLATE.DIR_RTL) {\r\n            return {paddingRight: getLayoutGutter()}\r\n        }\r\n        return {paddingLeft: getLayoutGutter()}\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <HeaderNav isMobile={isMobile}/>\r\n            {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo} /> : null}\r\n            <Layout>\r\n                {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo} /> : null }\r\n                <Layout style={getLayoutDirectionGutter()}>\r\n                    <AppContent isNavTop={isNavTop}>\r\n                        <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n                        <Content className=\"h-100\">\r\n                            <Suspense fallback={<Loading cover=\"content\"/>}>\r\n                                {children}\r\n                            </Suspense>\r\n                        </Content>\r\n                    </AppContent>\r\n                    <Footer />\r\n                </Layout>\r\n            </Layout>\r\n            {isMobile && <MobileNav routeInfo={currentRouteInfo} />}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n    const { navCollapsed, navType, locale } =  theme;\r\n    return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Icon","this","props","type","className","React","Component","id","fallback","translate","t","useTranslation","iconMap","DashboardOutlined","DotChartOutlined","FundOutlined","UserOutlined","CalendarOutlined","TrophyOutlined","FileTextOutlined","SettingOutlined","UserSwitchOutlined","SafetyOutlined","TeamOutlined","AppstoreAddOutlined","dashBoardNavTree","transformMenuToNavTree","menuData","map","item","key","name","path","APP_PREFIX_PATH","title","icon","breadcrumb","isGroupTitle","submenu","JSON","parse","localStorage","getItem","useBreakpoint","Grid","setLocale","localeKey","isLocaleOn","toString","setDefaultOpen","keyList","keyString","arr","split","index","length","elm","push","MenuItem","dispatch","useDispatch","isMobile","utils","includes","onClick","onMobileNavToggle","to","getSideNavMenuItem","navItem","nav","label","children","getTopNavMenuItem","SideNavContent","routeInfo","hideGroupTitle","sideNavTheme","SIDE_NAV_LIGHT","menuItems","useMemo","navigationConfig","mode","theme","style","height","borderInlineEnd","defaultSelectedKeys","defaultOpenKeys","items","TopNavContent","topNavColor","useSelector","state","backgroundColor","NAV_TYPE_SIDE","Sider","Layout","connect","navCollapsed","currentTheme","css","TEMPLATE","SIDE_NAV_DARK","GRAY_SCALE","DARK_MODE","width","SIDE_NAV_WIDTH","collapsed","autoHide","TopNvContent","WHITE","GRAY","NAV_TYPE_TOP","LogoWrapper","transition","mobileLogo","logoType","navType","isNavTop","SIDE_NAV_COLLAPSED_WIDTH","getLogoWidthGutter","src","alt","APP_NAME","mobileNav","menuContentprops","onClose","placement","closable","open","bodyStyle","ArrowLeftOutlined","isDark","rgba","MEDIA_QUERIES","baseTheme","fontSize","FONT_SIZES","Profile","UserInfo","SPACER","Name","fontWeight","FONT_WEIGHT","Title","opacity","as","href","MenuItemSignOut","signOut","removeItem","window","location","reload","LogoutOutlined","EditOutlined","ShopOutlined","QuestionCircleOutlined","menu","trigger","locale","langId","onLocaleChange","i18n","maxWidth","langName","CheckOutlined","SearchResultIcon","marginRight","SearchResultTitle","color","optionList","getOptionList","navigationTree","optionTree","getCategoryIcon","category","AppstoreOutlined","AntDesignOutlined","active","close","useState","value","setValue","options","setOptions","inputRef","useRef","current","focus","ref","BODY_BACKGROUND","popupClassName","onSelect","onSearch","searchText","searchResult","filterOption","inputValue","option","toUpperCase","indexOf","placeholder","prefix","SearchOutlined","SeachWrapper","headerBg","position","top","headerNavColor","headerBgBase","CloseOutlined","isDarkTheme","left","zIndex","flex","lineHeight","boxShadow","navWidth","right","marginLeft","searchActive","setSearchActive","onSearchClose","direction","navMode","navBgColor","useEffect","toggleCollapsedNav","MenuUnfoldOutlined","MenuFoldOutlined","breadcrumbData","i","assignBreadcrumb","obj","forEach","BreadcrumbRoute","pathSnippets","useLocation","pathname","filter","breadcrumbItems","_","url","slice","join","AppBreadcrumb","Footer","BORDER","Date","getFullYear","e","preventDefault","Content","AppContent","AppLayout","currentRouteInfo","screens","isNavSide","getLayoutGutter","paddingLeft","paddingRight","Suspense","Loading","cover","Utils","initials","match","shift","pop","navTree","route","p","hasOwnProperty","getRouteInfo","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","percent","R","G","B","RR","GG","BB","trim","str","replace","inParts","r","g","b","a","parseFloat","toFixed","outParts","Math","round","part","number","positive","negative","toLowerCase","list","data","input","breakpoints"],"sourceRoot":""}