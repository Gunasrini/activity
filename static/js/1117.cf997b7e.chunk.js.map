{"version":3,"file":"static/js/1117.cf997b7e.chunk.js","mappings":"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","sources":["views/app-views/event-category/EventCategory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Button, Modal, Form, Input, Popconfirm, message } from 'antd';\r\n\r\nconst EventCategory = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [eventCategories, setEventCategories] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [editingCategory, setEditingCategory] = useState(null);\r\n\r\n  const API_BASE_URL = 'http://localhost:3000/api/admin';\r\n\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n    setIsEditing(false);\r\n    setEditingCategory(null);\r\n    form.resetFields();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEventCategories();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      const filtered = eventCategories.filter((category) =>\r\n        category.ec_name.toLowerCase().includes(searchQuery.toLowerCase())\r\n      );\r\n      setFilteredData(filtered);\r\n    } else {\r\n      setFilteredData(eventCategories);\r\n    }\r\n  }, [searchQuery, eventCategories]);\r\n\r\n  // Fetch event categories from the API\r\n  const fetchEventCategories = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/getEventCategory`);\r\n      setEventCategories(response.data.data);\r\n      setFilteredData(response.data.data);\r\n    } catch (error) {\r\n      message.error('Failed to fetch event categories');\r\n    }\r\n  };\r\n\r\n  // Handle the addition of a new event category\r\n  const handleAddCategory = async (values) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/addEventCategory`, { ec_name: values.name });\r\n      message.success('Event category added successfully');\r\n      fetchEventCategories();\r\n      toggleModal();\r\n    } catch (error) {\r\n      message.error('Failed to add event category');\r\n    }\r\n  };\r\n\r\n  // Handle editing an existing event category\r\n  const handleEditCategory = (category) => {\r\n    setIsEditing(true);\r\n    setEditingCategory(category);\r\n    form.setFieldsValue({ name: category.ec_name });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Handle updating the event category\r\n  const handleUpdateCategory = async (values) => {\r\n    try {\r\n      await axios.put(`${API_BASE_URL}/updateEventCategory/${editingCategory.id}`, { ec_name: values.name });\r\n      message.success('Event category updated successfully');\r\n      fetchEventCategories();\r\n      toggleModal();\r\n    } catch (error) {\r\n      if (error.response && error.response.data && error.response.data.message) {\r\n        message.error(error.response.data.message);\r\n      } else {\r\n        message.error('An unexpected error occurred');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle deleting an event category\r\n  const handleDeleteCategory = async (categoryId) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/deleteEventCategory/${categoryId}`);\r\n      message.success('Event category deleted successfully');\r\n      fetchEventCategories();\r\n    } catch (error) {\r\n      message.error('Failed to delete event category');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { title: 'S.No', dataIndex: 'id', key: 'id' },\r\n    { title: 'Category Name', dataIndex: 'ec_name', key: 'name' },\r\n    {\r\n      title: 'Actions',\r\n      key: 'actions',\r\n      render: (text, record) => (\r\n        <span>\r\n          <Button type=\"link\" onClick={() => handleEditCategory(record)}>Edit</Button>\r\n          <Popconfirm\r\n            title=\"Are you sure to delete this category?\"\r\n            onConfirm={() => handleDeleteCategory(record.id)}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button type=\"link\" danger>Delete</Button>\r\n          </Popconfirm>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"event-category\">\r\n      <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <h2>Event Categories</h2>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <Input\r\n            placeholder=\"Search categories\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            style={{ marginRight: 16, width: 200, borderRadius: 0 }}\r\n          />\r\n          <Button type=\"primary\" onClick={toggleModal} style={{ borderRadius: 0 }}>\r\n            Add Category\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={filteredData}\r\n        rowKey=\"id\"\r\n        pagination={{ pageSize: 10, showSizeChanger: false, position: ['bottomRight'] }}\r\n      />\r\n\r\n      <Modal\r\n        title={isEditing ? \"Edit Event Category\" : \"Add New Event Category\"}\r\n        visible={isModalOpen}\r\n        onCancel={toggleModal}\r\n        footer={null}\r\n      >\r\n        <Form\r\n          form={form}\r\n          onFinish={isEditing ? handleUpdateCategory : handleAddCategory}\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"Category Name\"\r\n            rules={[{ required: true, message: 'Please enter a category name' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item className=\"form-buttons\" style={{ textAlign: 'right' }}>\r\n            <Button type=\"default\" onClick={toggleModal} style={{ marginRight: 8 }}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {isEditing ? \"Update Category\" : \"Add Category\"}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCategory;\r\n"],"names":["useState","isModalOpen","setIsModalOpen","isEditing","setIsEditing","Form","form","eventCategories","setEventCategories","filteredData","setFilteredData","searchQuery","setSearchQuery","editingCategory","setEditingCategory","API_BASE_URL","toggleModal","resetFields","useEffect","fetchEventCategories","filtered","filter","category","ec_name","toLowerCase","includes","axios","response","data","message","handleAddCategory","values","name","handleUpdateCategory","id","handleDeleteCategory","categoryId","columns","title","dataIndex","key","render","text","record","type","onClick","setFieldsValue","onConfirm","okText","cancelText","danger","className","style","display","justifyContent","alignItems","placeholder","value","onChange","e","target","marginRight","width","borderRadius","dataSource","rowKey","pagination","pageSize","showSizeChanger","position","visible","onCancel","footer","onFinish","label","rules","required","textAlign","htmlType"],"sourceRoot":""}