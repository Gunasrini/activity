{"version":3,"file":"static/js/3130.64e60415.chunk.js","mappings":"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","sources":["components/shared-components/AvatarStatus/index.js","components/shared-components/EllipsisDropdown/index.js","components/shared-components/Flex/index.js","constants/ChartConstant.js","views/app-views/apps/chat/Conversation.js","views/app-views/apps/chat/ChatContent.js","views/app-views/apps/chat/ChatMenu.js","views/app-views/apps/chat/index.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React, { useRef, useState, useEffect } from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Avatar, Divider, Input, Form, Button, Menu } from 'antd';\r\nimport { \r\n\tFileOutlined, \r\n\tSendOutlined, \r\n\tPaperClipOutlined, \r\n\tSmileOutlined, \r\n\tAudioMutedOutlined,\r\n\tUserOutlined,\r\n\tDeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst menu = () => (\r\n\t<Menu>\r\n\t\t<Menu.Item key=\"0\">\r\n\t\t\t<UserOutlined />\r\n\t\t\t<span>User Info</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Item key=\"1\">\r\n\t\t\t<AudioMutedOutlined />\r\n\t\t\t<span>Mute Chat</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Divider />\r\n\t\t<Menu.Item key=\"3\">\r\n\t\t\t<DeleteOutlined />\r\n\t\t\t<span>Delete Chat</span>\r\n\t\t</Menu.Item>\r\n\t</Menu>\r\n);\r\n\r\nconst Conversation = () => {\r\n\r\n\tconst formRef = useRef();\r\n\tconst chatBodyRef = useRef();\r\n\r\n\tconst params = useParams();\r\n\r\n\tconst [ info, setInfo ] = useState({});\r\n\tconst [ msgList, setMsgList ] = useState([]);\r\n\r\n\tconst { id } = params\r\n\r\n\tconst getUserId = () => {\r\n\t\treturn parseInt(parseInt(id))\r\n\t}\r\n\t\r\n\tconst getConversation = currentId => {\r\n\t\tconst data = ChatData.filter(elm => elm.id === currentId)\r\n\r\n\t\tsetInfo(data[0])\r\n\t\tsetMsgList(data[0].msg)\r\n\t}\r\n\r\n\tconst getMsgType = obj => {\r\n\t\tswitch (obj.msgType) {\r\n\t\t\tcase 'text':\r\n\t\t\t\treturn <span>{obj.text}</span>\r\n\t\t\tcase 'image':\r\n\t\t\t\treturn <img src={obj.text} alt={obj.text} />\r\n\t\t\tcase 'file':\r\n\t\t\t\treturn (\r\n\t\t\t\t<Flex alignItems=\"center\" className=\"msg-file\">\r\n\t\t\t\t\t<FileOutlined className=\"font-size-md\"/>\r\n\t\t\t\t\t<span className=\"ml-2 font-weight-semibold text-link pointer\">\r\n\t\t\t\t\t\t<u>{obj.text}</u>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t)\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tchatBodyRef.current.scrollToBottom()\r\n\t}\r\n\r\n\tconst onSend = values => {\r\n\t\tif (values.newMsg) {\r\n\t\t\tconst newMsgData = {\r\n\t\t\t\tavatar: \"\",\r\n\t\t\t\tfrom: \"me\",\r\n\t\t\t\tmsgType: \"text\",\r\n\t\t\t\ttext: values.newMsg,\r\n\t\t\t\ttime: \"\",\r\n\t\t\t};\r\n\r\n\t\t\tformRef.current.setFieldsValue({\r\n\t\t\t\tnewMsg: ''\r\n\t\t\t});\r\n\r\n\t\t\tsetMsgList([...msgList, newMsgData]);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst emptyClick = (e) => {\r\n    \te.preventDefault();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetConversation(getUserId())\r\n\t\tscrollToBottom()\r\n\t}, [id])\r\n\t\r\n\tconst chatContentHeader = name => (\r\n\t\t<div className=\"chat-content-header\">\r\n\t\t\t<h4 className=\"mb-0\">{name}</h4>\r\n\t\t\t<div>\r\n\t\t\t\t<EllipsisDropdown menu={menu}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\tconst chatContentBody = (props, id) => (\r\n\t\t<div className=\"chat-content-body\">\r\n\t\t\t<Scrollbars ref={chatBodyRef} autoHide>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.map((elm, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`msg-${id}-${i}`} \r\n\t\t\t\t\t\t\tclassName={`msg ${elm.msgType === 'date'? 'datetime' : ''} ${elm.from === 'opposite'? 'msg-recipient' : elm.from === 'me'? 'msg-sent' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.avatar? \r\n\t\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t<Avatar src={elm.avatar} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.text?\r\n\t\t\t\t\t\t\t\t<div className={`bubble ${!elm.avatar? 'ml-5' : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"bubble-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t{getMsgType(elm)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.msgType === 'date'?\r\n\t\t\t\t\t\t\t\t<Divider>{elm.time}</Divider>\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</Scrollbars>\r\n\t\t</div>\r\n\t)\r\n\r\n\tconst chatContentFooter = () => (\r\n\t\t<div className=\"chat-content-footer\">\r\n\t\t\t<Form name=\"msgInput\" ref={formRef} onFinish={onSend} className=\"w-100\">\r\n\t\t\t\t<Form.Item name=\"newMsg\" className=\"mb-0\">\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\tautoComplete=\"off\" \r\n\t\t\t\t\t\tplaceholder=\"Type a message...\"\r\n\t\t\t\t\t\tsuffix={\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t<a href=\"/#\"  className=\"text-dark font-size-lg mr-3\" onClick={emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<SmileOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<a href=\"/#\" className=\"text-dark font-size-lg mr-3\" onClick={emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<PaperClipOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<Button shape=\"circle\" type=\"primary\" size=\"small\" onClick={onSend} htmlType=\"submit\">\r\n\t\t\t\t\t\t\t\t\t<SendOutlined />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-content\">\r\n\t\t\t\t{chatContentHeader(info.name)}\r\n\t\t\t\t{chatContentBody(msgList, params.id)}\r\n\t\t\t\t{chatContentFooter()}\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Conversation\r\n","import React from 'react'\r\nimport { Route, Routes, } from 'react-router-dom';\r\nimport Conversation from './Conversation';\r\n\r\nconst ConversationEmpty = () => (\r\n  <div className=\"chat-content-empty\">\r\n    <div className=\"text-center\">\r\n      <img src=\"/img/others/img-11.png\" alt=\"Start a Conversation\" />\r\n      <h1 className=\"font-weight-light\">Start a conversation</h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst ChatContent = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path={`:id`} element={<Conversation />} />\r\n      <Route path={`/`} element={<ConversationEmpty />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default ChatContent\r\n","import React, { useState } from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Badge, Input } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { COLOR_1 } from 'constants/ChartConstant';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst ChatMenu = () => {\r\n\r\n\tconst [list, setList] = useState(ChatData);\r\n\r\n\tconst location = useLocation()\r\n\r\n\tlet navigate = useNavigate();\r\n\r\n\tconst openChat = id => {\r\n\r\n\t\tconst data = list.map( elm => {\r\n\t\t\tif(elm.id === id) {\r\n\t\t\t\telm.unread = 0\r\n\t\t\t}\r\n\t\t\treturn elm\r\n\t\t})\r\n\t\tsetList(data)\r\n\t\tnavigate(`${id}`)\r\n\t}\r\n\r\n\tconst searchOnChange = e => {\r\n\t\tconst query = e.target.value;\r\n\t\tconst data = ChatData.filter(item => {\r\n\t\t\treturn query === ''? item : item.name.toLowerCase().includes(query)\r\n\t\t})\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\tconst id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1])\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-menu\">\r\n\t\t\t<div className=\"chat-menu-toolbar\">\r\n\t\t\t\t<Input \r\n\t\t\t\t\tplaceholder=\"Search\" \r\n\t\t\t\t\tonChange={searchOnChange}\r\n\t\t\t\t\tprefix={\r\n\t\t\t\t\t\t<SearchOutlined className=\"font-size-lg mr-2\"/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chat-menu-list\">\r\n\t\t\t\t{\r\n\t\t\t\t\tlist.map( (item, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`chat-item-${item.id}`} \r\n\t\t\t\t\t\t\tonClick={() => openChat(item.id)} \r\n\t\t\t\t\t\t\tclassName={`chat-menu-list-item ${i === (list.length - 1)? 'last' : ''} ${item.id === id? 'selected' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AvatarStatus src={item.avatar} name={item.name} subTitle={item.msg[item.msg.length - 1].text}/>\r\n\t\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<div className=\"chat-menu-list-item-time\">{item.time}</div>\r\n\t\t\t\t\t\t\t\t{item.unread === 0 ? <span></span> : <Badge count={item.unread} style={{backgroundColor: COLOR_1}}/>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ChatMenu\r\n","\timport React from 'react'\r\n\timport InnerAppLayout from 'layouts/inner-app-layout';\r\n\timport ChatContent from './ChatContent';\r\n\timport ChatMenu from './ChatMenu';\r\n\r\n\tconst Chat = props => {\r\n\t\treturn (\r\n\t\t\t<div className=\"chat\">\r\n\t\t\t\t<InnerAppLayout \r\n\t\t\t\t\tsideContent={<ChatMenu {...props}/>}\r\n\t\t\t\t\tmainContent={<ChatContent {...props}/>}\r\n\t\t\t\t\tsideContentWidth={450}\r\n\t\t\t\t\tsideContentGutter={false}\r\n\t\t\t\t\tborder\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\texport default Chat\r\n"],"names":["renderAvatar","props","className","type","text","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","EllipsisDropdown","overlay","menu","placement","trigger","defaultProps","Flex","styled","justifyContent","alignItems","flexDirection","padding","margin","baseStyle","display","COLOR_1","COLOR_2","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","apexPieChartDefaultOption","pie","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","apexSparklineChartDefultOption","sparkline","fixed","x","title","seriesName","marker","UserOutlined","AudioMutedOutlined","DeleteOutlined","formRef","useRef","chatBodyRef","params","useParams","useState","info","setInfo","msgList","setMsgList","getMsgType","obj","msgType","alt","FileOutlined","onSend","values","newMsg","newMsgData","avatar","from","time","current","setFieldsValue","emptyClick","e","preventDefault","useEffect","currentId","data","ChatData","elm","msg","getConversation","parseInt","scrollToBottom","ref","autoHide","map","i","chatContentBody","onFinish","autoComplete","placeholder","href","SmileOutlined","PaperClipOutlined","htmlType","SendOutlined","ConversationEmpty","path","element","list","setList","location","useLocation","navigate","useNavigate","pathname","match","onChange","query","target","value","item","toLowerCase","includes","prefix","SearchOutlined","unread","openChat","length","AvatarStatus","count","style","backgroundColor","sideContent","mainContent","sideContentWidth","sideContentGutter","border"],"sourceRoot":""}