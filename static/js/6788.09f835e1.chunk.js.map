{"version":3,"file":"static/js/6788.09f835e1.chunk.js","mappings":"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","sources":["views/app-views/dashboards/sales/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Button, Modal, Form, Input, Select, Popconfirm, message, DatePicker,Col,Row } from 'antd';\r\nimport moment from 'moment';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Event = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [events, setEvents] = useState([]);\r\n  const [eventCategories, setEventCategories] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [editingEvent, setEditingEvent] = useState(null);\r\n\r\n  const API_BASE_URL = 'http://localhost:3000/api/admin';\r\n\r\n  // Toggle modal for Add/Edit\r\n  const toggleModal = () => {\r\n    setIsModalOpen(!isModalOpen);\r\n    setIsEditing(false);\r\n    setEditingEvent(null);\r\n    form.resetFields();\r\n  };\r\n\r\n  // Fetch events and categories on component load\r\n  useEffect(() => {\r\n    fetchEvents();\r\n    fetchEventCategories();\r\n  }, []);\r\n\r\n  // Handle search query updates\r\n  useEffect(() => {\r\n    const filtered = searchQuery\r\n      ? events.filter((event) =>\r\n          event.e_name.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n      : events;\r\n    setFilteredData(filtered);\r\n  }, [searchQuery, events]);\r\n\r\n  // Fetch events from API\r\n  const fetchEvents = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/getAllEvents`);\r\n      setEvents(response.data.data || []);\r\n      setFilteredData(response.data.data || []);\r\n    } catch (error) {\r\n      message.error('Failed to fetch events');\r\n    }\r\n  };\r\n\r\n  // Fetch event categories for the dropdown\r\n  const fetchEventCategories = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/getEventCategory`);\r\n      setEventCategories(response.data.data || []);\r\n    } catch (error) {\r\n      message.error('Failed to fetch event categories');\r\n    }\r\n  };\r\n\r\n  // Add a new event\r\n  const handlecreateEvent = async (values) => {\r\n    try {\r\n      await axios.post(`${API_BASE_URL}/createEvent`, values);\r\n      message.success('Event added successfully');\r\n      fetchEvents();\r\n      toggleModal();\r\n    } catch (error) {\r\n      message.error('Failed to add event');\r\n    }\r\n  };\r\n\r\n  // Edit an existing event\r\n  const handleEditEvent = (event) => {\r\n    setIsEditing(true);\r\n    setEditingEvent(event);\r\n    form.setFieldsValue({\r\n      ...event,\r\n      e_date: event.e_date ? moment(event.e_date) : null,\r\n    });\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Update an existing event\r\n  const handleUpdateEvent = async (values) => {\r\n    try {\r\n      await axios.put(`${API_BASE_URL}/updateEvent/${editingEvent.id}`, values);\r\n      message.success('Event updated successfully');\r\n      fetchEvents();\r\n      toggleModal();\r\n    } catch (error) {\r\n      message.error('Failed to update event');\r\n    }\r\n  };\r\n\r\n  // Delete an event\r\n  const handleDeleteEvent = async (eventId) => {\r\n    try {\r\n      await axios.delete(`${API_BASE_URL}/deleteEvent/${eventId}`);\r\n      message.success('Event deleted successfully');\r\n      fetchEvents();\r\n    } catch (error) {\r\n      message.error('Failed to delete event');\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { title: 'S.No', dataIndex: 'id', key: 'id' },\r\n    { title: 'Event', dataIndex: 'e_name', key: 'e_name' },\r\n    { title: 'Category', dataIndex: 'e_category_id', key: 'e_category_id', render: (id) => {\r\n        const category = eventCategories.find((cat) => cat.id === id);\r\n        return category ? category.ec_name : 'N/A';\r\n      },\r\n    },\r\n    { title: 'Short Description', dataIndex: 'e_short_description', key: 'e_short_description' },\r\n    { title: 'Description', dataIndex: 'e_description', key: 'e_description' },\r\n    { title: 'Date', dataIndex: 'e_date', key: 'e_date' },\r\n    { title: 'Location', dataIndex: 'e_location', key: 'e_location' },\r\n    { title: 'Status', dataIndex: 'e_status', key: 'e_status' },\r\n    { title: 'Image', dataIndex: 'e_image', key: 'e_image', render: (image) => (\r\n        <img src={`/images/${image}`} alt=\"Event\" style={{ width: 50, height: 50 }} />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      key: 'actions',\r\n      render: (_, record) => (\r\n        <span>\r\n          <Button type=\"link\" onClick={() => handleEditEvent(record)}>Edit</Button>\r\n          <Popconfirm\r\n            title=\"Are you sure you want to delete this event?\"\r\n            onConfirm={() => handleDeleteEvent(record.id)}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <Button type=\"link\" danger>Delete</Button>\r\n          </Popconfirm>\r\n        </span>\r\n      ),\r\n    },\r\n  ];\r\n  \r\n\r\n  return (\r\n    <div className=\"events\">\r\n      <div className=\"header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <h2>Events</h2>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <Input\r\n            placeholder=\"Search events\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            style={{ marginRight: 16, width: 200, borderRadius: 0 }}\r\n          />\r\n          <Button type=\"primary\" onClick={toggleModal} style={{ borderRadius: 0 }}>\r\n            Add Event\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={filteredData}\r\n        rowKey=\"id\"\r\n        pagination={{ pageSize: 10, showSizeChanger: false, position: ['bottomRight'] }}\r\n      />\r\n\r\n<Modal\r\n  title={isEditing ? \"Edit Event\" : \"Add New Event\"}\r\n  open={isModalOpen}\r\n  onCancel={toggleModal}\r\n  footer={null}\r\n>\r\n  <Form\r\n    form={form}\r\n    layout=\"vertical\"\r\n    onFinish={isEditing ? handleUpdateEvent : handlecreateEvent}\r\n  >\r\n    <Row gutter={16}>\r\n      <Col span={12}>\r\n        <Form.Item\r\n          name=\"e_category_id\"\r\n          label=\"Event Category\"\r\n          rules={[{ required: true, message: \"Please select an event category\" }]}\r\n        >\r\n          <Select placeholder=\"Select category\">\r\n            {eventCategories.map((category) => (\r\n              <Option key={category.id} value={category.id}>\r\n                {category.ec_name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Form.Item\r\n          name=\"e_name\"\r\n          label=\"Event Name\"\r\n          rules={[{ required: true, message: \"Please enter an event name\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Form.Item\r\n          name=\"e_date\"\r\n          label=\"Event Date\"\r\n          rules={[{ required: true, message: \"Please select an event date\" }]}\r\n        >\r\n          <DatePicker format=\"DD-MM-YYYY\" style={{ width: \"100%\" }} />\r\n        </Form.Item>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Form.Item\r\n          name=\"e_location\"\r\n          label=\"Event Location\"\r\n          rules={[{ required: true, message: \"Please enter an event location\" }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Form.Item\r\n          name=\"e_description\"\r\n          label=\"Event Description\"\r\n          rules={[{ required: true, message: \"Please enter an event description\" }]}\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Form.Item\r\n          name=\"e_short_description\"\r\n          label=\"Short Description\"\r\n          rules={[{ required: true, message: \"Please enter a short description\" }]}\r\n        >\r\n          <Input.TextArea />\r\n        </Form.Item>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Form.Item\r\n          name=\"e_image\"\r\n          label=\"Event Image\"\r\n          valuePropName=\"file\"\r\n          rules={[{ required: true, message: \"Please upload an event image\" }]}\r\n        >\r\n          <Input type=\"file\" accept=\"image/*\" />\r\n        </Form.Item>\r\n      </Col>\r\n    </Row>\r\n    <div style={{ textAlign: \"right\" }}>\r\n      <Button type=\"default\" onClick={toggleModal} style={{ marginRight: 8 }}>\r\n        Cancel\r\n      </Button>\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        {isEditing ? \"Update Event\" : \"Add Event\"}\r\n      </Button>\r\n    </div>\r\n  </Form>\r\n</Modal>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Event;\r\n"],"names":["Option","Select","useState","isModalOpen","setIsModalOpen","isEditing","setIsEditing","Form","form","events","setEvents","eventCategories","setEventCategories","filteredData","setFilteredData","searchQuery","setSearchQuery","editingEvent","setEditingEvent","API_BASE_URL","toggleModal","resetFields","useEffect","fetchEvents","fetchEventCategories","filtered","filter","event","e_name","toLowerCase","includes","axios","response","data","message","handlecreateEvent","values","handleUpdateEvent","id","handleDeleteEvent","eventId","columns","title","dataIndex","key","render","category","find","cat","ec_name","image","src","alt","style","width","height","_","record","type","onClick","setFieldsValue","e_date","moment","onConfirm","okText","cancelText","danger","className","display","justifyContent","alignItems","placeholder","value","onChange","e","target","marginRight","borderRadius","dataSource","rowKey","pagination","pageSize","showSizeChanger","position","open","onCancel","footer","layout","onFinish","gutter","span","name","label","rules","required","map","format","valuePropName","accept","textAlign","htmlType"],"sourceRoot":""}